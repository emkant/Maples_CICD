<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog 
	xmlns="http://www.liquibase.org/xml/ns/dbchangelog" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:n0="http://www.oracle.com/xml/ns/dbchangelog-ext" 
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog 
	http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">
	<changeSet id="3499e407b5a518ad4b7a73887e36ddfd296918b9" author="(MAPLESDEV)-Generated" failOnError="true"   runOnChange="false" runAlways="false"  >
		<n0:createOraclePackageBody objectName="MA_UTIL" objectType="PACKAGE_BODY" ownerName="MAPLESDEV"  replaceIfExists="false" >
			<n0:source><![CDATA[CREATE OR REPLACE EDITIONABLE PACKAGE BODY "%USER_NAME%"."MA_UTIL" as
    P_URL        VARCHAR2(200);
    INSTANCE_URL VARCHAR2(200);
  procedure fetch_invoices
  is 
    L_URL                  VARCHAR2(4000);
    L_VERSION              VARCHAR2(1000) := '1.2';
    L_ENVELOPE             VARCHAR2(10000);
    L_XML_RESPONSE         XMLTYPE;
    L_CLOB_REPORT_RESPONSE CLOB;
    L_CLOB_REPORT_DECODE   CLOB;
    L_CLOB_TEMP            CLOB;
    V_CONTRACT_ID          NUMBER;
  begin
    IF P_URL IS NULL THEN
      P_URL := INSTANCE_URL
               || '/xmlpserver/services/ExternalReportWSSService';
    END IF;
    L_URL := P_URL;
    DBMS_LOB.CREATETEMPORARY (L_CLOB_REPORT_RESPONSE, TRUE);
    DBMS_LOB.CREATETEMPORARY (L_CLOB_REPORT_DECODE, TRUE);
    DBMS_LOB.CREATETEMPORARY (L_CLOB_TEMP, TRUE);
    L_ENVELOPE := '<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:pub="http://xmlns.oracle.com/oxp/service/PublicReportService">
			<soap:Header/>
			   <soap:Body>
				  <pub:runReport>
					 <pub:reportRequest>
					   <pub:attributeFormat>xml</pub:attributeFormat>
					   <pub:reportAbsolutePath>/Custom/Projects/Project Billing/Project Costs Report.xdo</pub:reportAbsolutePath>
					   <pub:sizeOfDataChunkDownload>-1</pub:sizeOfDataChunkDownload>
					 </pub:reportRequest>
					 <pub:appParams></pub:appParams>
				  </pub:runReport>
			   </soap:Body>
			</soap:Envelope>';
    APEX_WEB_SERVICE.G_REQUEST_HEADERS (1).NAME := 'Authorization';
    APEX_WEB_SERVICE.G_REQUEST_HEADERS (1).VALUE := 'Bearer '
                                                      || V ('G_SAAS_ACCESS_TOKEN');
    BEGIN
      L_XML_RESPONSE := APEX_WEB_SERVICE.MAKE_REQUEST ( P_URL => L_URL
                  , P_VERSION => L_VERSION, P_ACTION => 'runReport'
                  , P_ENVELOPE => L_ENVELOPE
        );
    EXCEPTION
      WHEN OTHERS THEN
        null;
    END; 
    -- XX_GPMS.WIP_DEBUG (2, 1048, '', L_XML_RESPONSE.GETCLOBVAL ());
    L_CLOB_REPORT_RESPONSE := APEX_WEB_SERVICE.PARSE_XML_CLOB ( P_XML => L_XML_RESPONSE, P_XPATH => ' //runReportResponse/runReportReturn/reportBytes', P_NS => ' xmlns="http://xmlns.oracle.com/oxp/service/PublicReportService"' );
    XX_GPMS.WIP_DEBUG (2, 1049, '', L_CLOB_REPORT_RESPONSE);
 -- now we need to do the following substr on the clob instead
    L_CLOB_TEMP := SUBSTR( L_CLOB_REPORT_RESPONSE, INSTR(L_CLOB_REPORT_RESPONSE, '>') + 1, INSTR( SUBSTR( L_CLOB_REPORT_RESPONSE, INSTR(L_CLOB_REPORT_RESPONSE, '>') + 1 ), '</ns2:report' ) - 1 );
    L_CLOB_REPORT_RESPONSE := L_CLOB_TEMP;
    L_CLOB_REPORT_DECODE := XX_GPMS.BASE64_DECODE_CLOB (L_CLOB_REPORT_RESPONSE);
    XX_GPMS.WIP_DEBUG (2, 1050, '', L_CLOB_REPORT_DECODE);  
    IF APEX_WEB_SERVICE.G_STATUS_CODE IN (200,201)
    THEN
      DELETE FROM MA_APPROVAL_INVOICES;
    INSERT INTO MA_APPROVAL_INVOICES(
    SELECT *
    FROM
        XMLTABLE( '/DATA_DS/G_INV_APPROVAL' PASSING XMLTYPE (L_CLOB_REPORT_DECODE) COLUMNS TASKID PATH 'TASKID',
        TASKNUMBER PATH 'TASKNUMBER',
        TASK_DEFINITION_NAME PATH 'TASKDEFINITIONNAME',
        PRIORITY PATH 'PRIORITY',
        TITLE PATH 'TITLE',
        IDENTIFICATION_KEY PATH 'IDENTIFICATIONKEY',
        CONTRACT_NUMBER PATH 'CONTRACT_NUMBER',
        INVOICE_NUM PATH 'INVOICE_NUM',
        INVOICE_STATUS_CODE PATH 'INVOICE_STATUS_CODE',
        ASSIGNEE PATH 'ASSIGNEE',
        ASSIGNEE_DISPLAY_NAME PATH 'ASSIGNEESDISPLAYNAME',
        INVOICE_CURRENCY_CODE PATH 'INVOICE_CURRENCY_CODE',
        INVOICE_DATE PATH 'INVOICE_DATE',
        INVOICE_AMOUNT PATH 'INVOICE_AMOUNT',
        WRITE_OFF_AMOUNT PATH 'WRITE_OFF_AMOUNT',
        BILL_CUSTOMER_NAME PATH 'BILL_CUSTOMER_NAME',
        BILL_CUST_ACCT_NUM PATH 'BILL_CUST_ACCT_NUM',
        BILL_CUST_ACCT_NAME PATH 'BILL_CUST_ACCT_NAME',
        BILL_CUST_SITE PATH 'BILL_CUST_SITE'));
    END IF;    
  exception
    when others then 
      XX_GPMS.WIP_DEBUG(3,DBMS_UTILITY.FORMAT_ERROR_BACKTRACE,'','');
  end; 
  PROCEDURE WEBSERVICE_CALL(P_WEB_SERVICE_TYPE VARCHAR2,P_REQUEST CLOB,P_RESPONSE_CODE OUT NUMBER,P_RESPONSE OUT CLOB)
  IS
    V_WEBSERVICE_CONFIG_ROW WEBSERVICE_CONFIG%ROWTYPE;
    L_RESPONSE_CLOB         CLOB;
    L_URL                   VARCHAR2(1000);
  BEGIN
    APEX_WEB_SERVICE.G_REQUEST_HEADERS (1).NAME := 'Content-Type';
    APEX_WEB_SERVICE.G_REQUEST_HEADERS (1).VALUE := 'application/json';
    SELECT *
    INTO   V_WEBSERVICE_CONFIG_ROW 
    FROM   WEBSERVICE_CONFIG
    WHERE  NAME = P_WEB_SERVICE_TYPE;
    L_RESPONSE_CLOB := APEX_WEB_SERVICE.MAKE_REST_REQUEST (
        P_URL => INSTANCE_URL||V_WEBSERVICE_CONFIG_ROW.URL,
        P_HTTP_METHOD => V_WEBSERVICE_CONFIG_ROW.ACTION,
        P_SCHEME => 'OAUTH_CLIENT_CRED',
        P_BODY => P_REQUEST
      );
    P_RESPONSE := L_RESPONSE_CLOB;  
    P_RESPONSE_CODE := APEX_WEB_SERVICE.G_STATUS_CODE;
    
    WEBSERVICE_LOGGER(INSTANCE_URL||V_WEBSERVICE_CONFIG_ROW.URL,P_REQUEST,L_RESPONSE_CLOB,APEX_WEB_SERVICE.G_STATUS_CODE);
  EXCEPTION
    WHEN OTHERS THEN
    WEBSERVICE_LOGGER(INSTANCE_URL||V_WEBSERVICE_CONFIG_ROW.URL,P_REQUEST,L_RESPONSE_CLOB,APEX_WEB_SERVICE.G_STATUS_CODE);
  END;    
  PROCEDURE MASS_APPROVE_INVOICES (P_TASK_NUMBERS VARCHAR2,P_RESPONSE CLOB)
  IS
    V_ENVELOPE VARCHAR2(1000);
    V_REST_API VARCHAR2(100) := 'MA_BULK_APPROVAL';
    V_RESPONSE_CODE NUMBER;
    V_RESPONSE VARCHAR2(4000);
  BEGIN
    
    SELECT ENVELOPE
    INTO   V_ENVELOPE
    FROM   WEBSERVICE_CONFIG 
    WHERE  NAME = V_REST_API;
    V_ENVELOPE := REPLACE(V_ENVELOPE,'task_numbers',P_TASK_NUMBERS);
    XX_GPMS.WIP_DEBUG (1, 1, 'ENVELOPE '
                        || v_envelope, '');
    WEBSERVICE_CALL(V_REST_API,V_ENVELOPE,V_RESPONSE_CODE,V_RESPONSE);                            
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;  
  PROCEDURE MASS_REJECT_INVOICES (P_TASK_NUMBERS VARCHAR2,P_JUSTIFICATION VARCHAR2,P_RESPONSE CLOB)
  IS
    V_ENVELOPE VARCHAR2(1000);
    V_REST_API VARCHAR2(100) := 'MA_BULK_REJECTION';
    V_RESPONSE_CODE NUMBER;
    V_RESPONSE VARCHAR2(4000);
  BEGIN
    
    SELECT ENVELOPE
    INTO   V_ENVELOPE
    FROM   WEBSERVICE_CONFIG 
    WHERE  NAME = V_REST_API;
    V_ENVELOPE := REPLACE(V_ENVELOPE,'task_numbers',P_TASK_NUMBERS);
    V_ENVELOPE := REPLACE(V_ENVELOPE,'_comments',P_JUSTIFICATION);
    XX_GPMS.WIP_DEBUG (1, 1, 'ENVELOPE '
                        || v_envelope, '');
    WEBSERVICE_CALL(V_REST_API,V_ENVELOPE,V_RESPONSE_CODE,V_RESPONSE);  
    IF V_RESPONSE_CODE NOT IN (200,201) THEN
      NULL;
    END IF;                          
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;          
  BEGIN
  SELECT
    BASE_URL INTO INSTANCE_URL
  FROM
    PRT_ENVIRONMENTS
  WHERE
    ORGANIZATION_ID IN (
      SELECT
        ORGANIZATION_ID
      FROM
        PRT_ORGANIZATIONS
      WHERE
        UPPER(ORGANIZATION_NAME) = V('P0_CLIENT')
    )
    AND UPPER(ENVIRONMENT_NAME) = V('P0_ENV');
  APEX_WEB_SERVICE.OAUTH_SET_TOKEN(
    P_TOKEN =>V ('G_SAAS_ACCESS_TOKEN')
  );   
end "MA_UTIL";
/]]></n0:source>
		</n0:createOraclePackageBody>
	</changeSet>
</databaseChangeLog>
